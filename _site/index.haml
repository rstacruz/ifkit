layout: default
title: Your new Proton site
--
%header#top
  %strong Ifkit
  %span Interface foundation kit

#content
  %section.heading
    :markdown
      # Interface foundation kit

      Ifkit is a set of convenience mixins for your everyday SASS needs.
      We've been making the same classes for almost every project we do,
      so we're moving to standardize that set of controls.

  %hgroup
    :markdown
      ## Buttons

  %section
    :markdown
      Ifkit provides some mixins for buttons.

      Take note that all buttons must be laid on top of a parent element that
      has `position: relative; z-index: 0;`. This is because Ifkit relies on
      `z-index: -1` for button borders, and elements with negative z-indices
      will not be visible if it's not placed a parent that has a z-index of `>=
      0`.


  %section
    %h3
      if-button-primary
      %br
      if-button-default

    :markdown
      #### __@include if-button-primary__
      #### __@include if-button-default__

      Ifkit comes with a few default button styles.

      You may override these styles by re-defining them. These are merely built
      with the other button mixins below.

    .pair
      .column
        %h3 CSS:
        %pre
          :plain
            .button-1 {
              @include if-button-primary; }

            .button-2 {
              @include if-button-default; }
      .column
        %h3 HTML:
        %pre
          = "<span class='button-1'>Take the tour</span>\n"
          = "<span class='button-2'>Cancel</span>"

    .result
      %span.button-1 Take the tour
      %span.button-2 Cancel

  %section
    %h3
      if-button-color

    :markdown
      #### @include if-button-color _($color)_
      You may also build your own buttons using the building blocks.
      `if-button-color` provides basic button styles, along with a border built
      using *:before* and it's hover styles attached. This does *not* style the
      height, padding and text.

    .pair
      .column
        %h3 CSS:
        %pre
          :plain
            .button-blue {
              @include if-button-color(#37d); }

      .column
        %h3 HTML:
        %pre
          = "<span class='button-blue'>Action</span>\n"

    .result
      %span.button-blue Action

  %section
    %h3
      if-button-color(...)

    :markdown
      #### @include if-button-color _($color, \[ $strength, $border-strength, $hover-strength, $active-strength, $highlight-opacity \])_
      You may specify additional parameters. All parameters except `$color` are optional.

      $color
      : The base color.

      $strength
      : Multiplier for the gradient color. `1.0` makes the button flat, `0`
      makes the button dark.

      $border-strength
      : Multiplier for the border color. `1.0` makes the border have the same
      color as the button, `< 1` makes it darker, `> 1` makes it lighter.
      `none` removes the border.

      $hover-strength
      : Multiplier for the hover color.

      $active-strength
      : Multiplier for the color for the active state (depressed) of the button.

      $highlight-opacity
      : Opacity for the highlight. `0.0` makes it invisible, `1.0` makes it completely white.


    .pair
      .column
        %h3 CSS:
        %pre
          :plain
            .button-red {
              @include if-button-color(#d33, 0.5, 1.1, 0.8, 0.8, 0.2); }

            .button-red-flat {
              @include if-button-color(#d33, 1.0, 1.1, 0.9, 0.8, 0.2); }

      .column
        %h3 HTML:
        %pre
          = "<span class='button-red'>Red button</span>\n"
          = "<span class='button-red-flat'>Flat button</span>\n"

    .result
      %span.button-red Red button
      %span.button-red-flat Flat button

  %section
    %h3
      if-button-height
      %br
      if-button-radius
      %br
      if-button-shadow

    :markdown
      #### @include if-button-height _($height, \[ $padding \])_
      #### @include if-button-radius _($left, \[ $right \])_
      #### @include if-button-shadow _($shadow)_

      Mixins to enhance `if-button-color`.

      It is encouraged for you to make your own mixins using `if-button-color`
      and these, just like the example below.

    .pair
      .column
        %h3 CSS:
        %pre
          :plain
            .button-pill {
              @include if-button-color(#eee, 0.9);
              @include if-button-height(32px, 0 20px);
              @include if-button-radius(16px);

              color: #333;
              font-weight: bold;
              font-size: 11pt;
              text-shadow: 1px 1px 0 rgba(white, 0.5); }

      .column
        %h3 HTML:
        %pre
          = "<span class='button-pill'>Pill button</span>\n"

    .result
      %span.button-pill Pill button

  %hgroup
    :markdown

      ## Forms

  %section
    %h3
      $if-textboxes

    %h4= '#{$if-textboxes}'
    :markdown

      Alias for the selector that targets all textboxes. Equivalent to
      `input[type=text], input[type=password],
      input[type=email], input[type=search]`.

  %section
    %h3
      if-textbox

    :markdown
      #### @include if-textbox

      Textbox. Includes styles for disabled, hover, focus, et al. Works great for `<input>` and `<textarea>` alike.

    .pair
      .column
        %h3 CSS:
        %pre
          :plain
            \#{$if-textboxes}.textbox {
              @include if-textbox; }

      .column
        %h3 HTML:
        %pre
          = "<input class='textbox' type='text'>\n"
          = "<input class='textbox' type='text' value='Disabled' disabled>"

    .result
      %input.textbox{type: 'text'}
      %input.textbox{type: 'text', value: 'disabled', disabled: true}

