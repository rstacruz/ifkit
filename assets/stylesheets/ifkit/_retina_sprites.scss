// Ifkit / http://ricostacruz.com/ifkit
// ------------------------------------

//@[Group] Retina sprites
//
// Helpers for making sprite sheets that are retina-compatible.
// Requires SASS 3.2. Don't use with 3.1 or lower.

@import 'ifkit/media';
@import 'compass/utilities/sprites';
@import 'compass/css3/background-size';

//@[Mixin] if-retina-sprite($name, $sprites, $sprites2x,)
// Helper for Retina sprites.
//
// Put your icon sprites in 2 folders: one for 1x assets, and another for 2x
// assets. Make sure that the filenames are the same (eg, `icon/mail.png`
// corresponds to `icon2x/mail.png`.)
//
// Define 2 sprite maps using the Compass `sprite-map` helper for these two paths.
//
// It's recommended to make a mixin for defining your icons.
//
//     $icon: sprite-map("icon/*.png");
//     $icon2x: sprite-map("icon2x/*.png");
//
//      @mixin icon($name) {
//        @include if-retina-sprite($name, $icon, $icon2x); }
//
//      /* Use it like so: */
//      button.mail {
//        @include icon(mail); }
//
// You can also define a padding by passing a 4th parameter. Be sure that your
// sprite maps have enough `spacing` to allow for this. This is great for
// expanding the hit area for iPhone assets.
//
//     /* Note that spacing in the 2x is twice the spacing of the 1x. */
//     $icon: sprite-map("icon/*.png", $spacing: 20px);
//     $icon2x: sprite-map("icon2x/*.png", $spacing: 40px);
//
//      @mixin icon($name, $pad: 0) {
//        @include if-retina-sprite($name, $icon, $icon2x, $pad); }
//
//      /* This gives you a padding of 10px. */
//      button.mail {
//        @include icon(mail, 10px); }
//
@mixin if-retina-sprite($name, $sprites, $sprites2x, $pad: 0, $dimensions: true) {
  @if $dimensions == true {
    @include sprite-dimensions($sprites, $name); }

  background-image: sprite-url($sprites);
  background-position: sprite-position($sprites, $name, -$pad, -$pad);
  background-repeat: no-repeat;

  @if $pad > 0 {
    padding: $pad; }

  @include if-retina {
    $pos: sprite-position($sprites2x, $name, -$pad*2, -$pad*2);
    background-image: sprite-url($sprites2x);
    background-position: nth($pos, 1) nth($pos, 2)/2;
    @include background-size(ceil(image-width(sprite-path($sprites2x)) / 2), auto); } }
