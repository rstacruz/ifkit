// Ifkit / http://ricostacruz.com/ifkit
// ------------------------------------

//@[Group] Buttons
//
// Ifkit provides some mixins for buttons.
//
// Take note that all buttons must be laid on top of a parent element that has
// `position: relative; z-index: 0;`. This is because Ifkit relies on `z-index:
// -1` for button borders, and elements with negative z-indices will not be
// visible if it's not placed a parent that has a `z-index` of `>= 0`.

// To use, import this group in your stylesheet using `@import 'ifkit/button';`.

@import 'compass/css3';

//@[Mixin] if-primary-button
//@[Mixin] if-default-button
//
//     # CSS
//     .button-1 {
//       @include if-primary-button; }
//     .button-2 {
//       @include if-default-button; }
//
//     # HTML
//     <span class='button-1'>Take the tour</span>
//     <span class='button-2'>Cancel</span>
//
// Ifkit comes with a few default button styles.
//
// You may override these styles by re-defining them. These are merely built
// with the other button mixins below.
//
@mixin if-default-button {
  @include if-button-color(#eee, 0.9);
  @include if-button-height(24px, 5px 20px);
  @include if-button-radius(2px);
  @include if-button-shadow;
  color: #555;
  font-weight: bold;
  font-size: 11pt;
  text-shadow: 1px 1px 1px rgba(white, 0.6); }

@mixin if-primary-button {
  @include if-button-color(#393, 0.8);
  @include if-button-height(24px, 5px 20px);
  @include if-button-radius(1px);
  @include if-button-shadow;
  color: #fff;
  font-weight: bold;
  font-size: 11pt;
  text-shadow: 1px 1px 1px #393 * 0.6; }

//@[Mixin] if-button-color($color, [ $strength, $border-strength, $hover-strength, $active-strength, $highlight-opacity ])
//
//     # CSS
//     .button-red {
//       @include if-button-color(#d33, 0.5, 1.1, 0.8, 0.8, 0.2); }
//     .button-red-flat {
//       @include if-button-color(#d33, 1.0, 1.1, 0.9, 0.8, 0.2); }
//
//     # HTML
//     <span class='button-red'>Red button</span>
//     <span class='button-red-flat'>Flat button</span>
//
// You may specify additional parameters. All parameters except `$color` are
// optional.
//
//   $color ::
//   The base color.
//
//   $strength ::
//   Multiplier for the gradient color. `1.0` makes the button flat, `0`
//   makes the button dark.
//
//   $border-strength ::
//   Multiplier for the border color. `1.0` makes the border have the same
//   color as the button, `< 1` makes it darker, `> 1` makes it lighter.
//   `none` removes the border.
//
//   $hover-strength ::
//   Multiplier for the hover color.
//
//   $active-strength ::
//   Multiplier for the color for the active state (depressed) of the button.
//
//   $highlight-opacity ::
//   Opacity for the highlight. `0.0` makes it invisible, `1.0` makes it
//   completely white.
//
@mixin if-button-color(
  $bg,
  $strength: 0.8,
  $border-strength: 0.8,
  $hover-strength: 1.02,
  $active-strength: 0.9,
  $hover-border-strength: $strength,
  $active-border-strength: $hover-border-strength,
  $highlight-opacity: 0.25
) {
  $hover_bg:  $bg * $hover-strength;
  $active_bg: $bg * $active-strength;

  & {
    cursor: pointer;

    @include box-sizing(content-box);
    display: inline-block;

    border: 0;

    background-color: $bg;
    @include background(linear-gradient($bg, $bg * $strength));
    @include box-shadow(
      inset 0 1px 0 rgba(white, $highlight-opacity),
      inset 1px 0 0 rgba(white, $highlight-opacity * 0.6));

    position: relative; }

  &:hover, &.hover {
    background-color: $hover_bg;
    @include background(linear-gradient($hover_bg, $hover_bg * $strength)); }

  &:active, &.active {
    background: $active_bg;
    @include box-shadow(inset 1px 1px 5px rgba(black, 1.5 * (1.0 - $strength))); }

  &:disabled, &.disabled {
    cursor: default; }

  @if $border-strength != none {
    $border_bg: $bg * $border-strength;
    $border_hover_bg: $border_bg * $hover-border-strength;
    $border_active_bg: $border_bg * $active-border-strength;

    // Border
    &:after {
      content: '';
      display: block;
      position: absolute;
      left: -1px;
      top: -1px;
      bottom: -1px;
      right: -1px;
      z-index: -1;

      background-color: $border_bg;
      @include background(linear-gradient(top, $border_bg, $border_bg * $strength)); }

    &:hover:after, &.hover:after {
      background-color: $border_hover_bg;
      @include background(linear-gradient(top, $border_hover_bg, $border_hover_bg * $strength)); }

    &:active:after, &.active:after {
      background-color: $border_active_bg;
      @include background(linear-gradient(top, $border_active_bg, $border_active_bg * $strength)); } } }

//@[Mixin] if-button-height($height, [ $padding ])
//@[Mixin] if-button-radius($left, [ $right ])
//@[Mixin] if-button-shadow($shadow)
//
//     # CSS
//     .button-pill {
//       @include if-button-color(#eee, 0.9);
//       @include if-button-height(32px, 0 20px);
//       @include if-button-radius(16px);
//       color: #333;
//       font-weight: bold;
//       font-size: 11pt;
//       text-shadow: 1px 1px 0 rgba(white, 0.5); }
//
//     # HTML
//     <span class='button-pill'>Pill button</span>
//
// Mixins to enhance `if-button-color`.
//
// It is encouraged for you to make your own mixins using `if-button-color`
// and these, just like the example below.
//
@mixin if-button-height($height: 24px, $padding: 4px 10px) {
  height: $height;
  line-height: $height;
  padding: $padding; }

@mixin if-button-radius($left: 1px, $right: $left) {
  $left_outer: 0;
  $right_outer: 0;

  @if $left != none {
    @if $left > 0 {
      $left_outer: $left + 1; }

    & {
      @include border-left-radius($left); }

    &:after {
      @include border-left-radius($left_outer); } }

  @if $right != none {
    @if $right > 0 {
      $right_outer: $right + 1; }

    & {
      @include border-right-radius($right); }

    &:after {
      @include border-right-radius($right_outer); } } }

@mixin if-button-shadow($shadow: 1px 1px 1px rgba(black, 0.1)) {
  &:after {
    @include box-shadow($shadow); } }

